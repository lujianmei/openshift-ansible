# This is an example of an OpenShift-Ansible host inventory for a cluster
# with natively hosted, containerized GlusterFS storage for both general
# application use and a natively hosted Docker registry. It will also create a
# StorageClass for the general storage.
#
# This inventory may be used with the deploy_cluster.yml playbook to deploy a new
# cluster with GlusterFS storage.
#
# This inventory may also be used with openshift-glusterfs/config.yml to
# deploy GlusterFS storage on an existing cluster. With this playbook, the
# registry backend volume will be created but the administrator must then
# either deploy a hosted registry or change an existing hosted registry to use
# that volume.
#
# There are additional configuration parameters that can be specified to
# control the deployment and state of a GlusterFS cluster. Please see the
# documentation in playbooks/openshift-glusterfs/README.md and
# roles/openshift_storage_glusterfs/README.md for additional details.

[oo_all_hosts]
mcentos01.example.com ansible_host=192.168.1.240
mcentos02.example.com ansible_host=192.168.1.241
centos01.example.com  ansible_host=192.168.1.231
centos02.example.com  ansible_host=192.168.1.232
centos03.example.com  ansible_host=192.168.1.233
centos04.example.com  ansible_host=192.168.1.234
centos05.example.com  ansible_host=192.168.1.235
centos06.example.com  ansible_host=192.168.1.236
centos07.example.com  ansible_host=192.168.1.237
centos08.example.com    ansible_host=192.168.1.238
centos09.example.com    ansible_host=192.168.1.239

[OSEv3:children]
masters
nodes
etcd
# Specify there will be GlusterFS nodes
glusterfs
glusterfs_registry

[OSEv3:vars]
ansible_ssh_user=root
openshift_deployment_type=origin
# Specify that we want to use GlusterFS storage for a hosted registry
openshift_hosted_registry_storage_kind=glusterfs

[masters]
mcentos01.example.com ansible_host=192.168.1.240
# Specify load balancer host
[lb]
centos07.example.com ansible_host=192.168.1.237


[nodes]
mcentos01.example.com   ansible_host=192.168.1.240 openshift_schedulable=False
# It is recommended to not use a single cluster for both general and registry
# storage, so two three-node clusters will be required.
centos01.example.com  ansible_host=192.168.1.231 openshift_schedulable=True
centos02.example.com  ansible_host=192.168.1.232 openshift_schedulable=True
centos03.example.com  ansible_host=192.168.1.233 openshift_node_labels="{'region': 'infra'}" openshift_schedulable=True
# A hosted registry, by default, will only be deployed on nodes labeled
# "region=infra".
centos04.example.com  ansible_host=192.168.1.234 openshift_node_labels="{'region': 'infra'}" openshift_schedulable=True
centos05.example.com  ansible_host=192.168.1.235 openshift_node_labels="{'region': 'infra'}" openshift_schedulable=True
centos06.example.com  ansible_host=192.168.1.236 openshift_node_labels="{'region': 'infra'}" openshift_schedulable=True
[etcd]
centos07.example.com ansible_host=192.168.1.237

# Specify the glusterfs group, which contains the nodes that will host
# GlusterFS storage pods. At a minimum, each node must have a
# "glusterfs_devices" variable defined. This variable is a list of block
# devices the node will have access to that is intended solely for use as
# GlusterFS storage. These block devices must be bare (e.g. have no data, not)
# be marked as LVM PVs, and will be formatted.
[glusterfs]
centos01.example.com  ansible_host=192.168.1.231 glusterfs_devices='[ "/dev/vdb", "/dev/vdc", "/dev/vdd" ]'
centos02.example.com  ansible_host=192.168.1.232 glusterfs_devices='[ "/dev/vdb", "/dev/vdc", "/dev/vdd" ]'
centos03.example.com  ansible_host=192.168.1.233 glusterfs_devices='[ "/dev/vdb", "/dev/vdc", "/dev/vdd" ]'

[glusterfs_registry]
centos04.example.com ansible_host=192.168.1.234 glusterfs_devices='[ "/dev/vdb", "/dev/vdc", "/dev/vdd" ]'
centos05.example.com ansible_host=192.168.1.235 glusterfs_devices='[ "/dev/vdb", "/dev/vdc", "/dev/vdd" ]'
centos06.example.com ansible_host=192.168.1.236 glusterfs_devices='[ "/dev/vdb", "/dev/vdc", "/dev/vdd" ]'
